<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="QUIZDataSet" targetNamespace="http://tempuri.org/QUIZDataSet.xsd" xmlns:mstns="http://tempuri.org/QUIZDataSet.xsd" xmlns="http://tempuri.org/QUIZDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="QUIZConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="QUIZConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.BD_Proj.Properties.Settings.GlobalReference.Default.QUIZConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ANSWERSTableAdapter" GeneratorDataComponentClassName="ANSWERSTableAdapter" Name="ANSWERS" UserDataComponentName="ANSWERSTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="QUIZConnectionString (Settings)" DbObjectName="dbo.ANSWERS" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ANSWERS] WHERE (([answerId] = @Original_answerId) AND ([answerContent] = @Original_answerContent) AND ([correctAnswer] = @Original_correctAnswer) AND ([questionId] = @Original_questionId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_answerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="answerId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_answerContent" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="answerContent" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_correctAnswer" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="correctAnswer" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_questionId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="questionId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ANSWERS] ([answerId], [answerContent], [correctAnswer], [questionId]) VALUES (@answerId, @answerContent, @correctAnswer, @questionId);
SELECT answerId, answerContent, correctAnswer, questionId FROM ANSWERS WHERE (answerId = @answerId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@answerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="answerId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@answerContent" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="answerContent" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@correctAnswer" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="correctAnswer" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@questionId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="questionId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT answerId, answerContent, correctAnswer, questionId FROM dbo.ANSWERS</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ANSWERS] SET [answerId] = @answerId, [answerContent] = @answerContent, [correctAnswer] = @correctAnswer, [questionId] = @questionId WHERE (([answerId] = @Original_answerId) AND ([answerContent] = @Original_answerContent) AND ([correctAnswer] = @Original_correctAnswer) AND ([questionId] = @Original_questionId));
SELECT answerId, answerContent, correctAnswer, questionId FROM ANSWERS WHERE (answerId = @answerId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@answerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="answerId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@answerContent" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="answerContent" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@correctAnswer" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="correctAnswer" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@questionId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="questionId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_answerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="answerId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_answerContent" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="answerContent" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_correctAnswer" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="correctAnswer" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_questionId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="questionId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="answerId" DataSetColumn="answerId" />
              <Mapping SourceColumn="answerContent" DataSetColumn="answerContent" />
              <Mapping SourceColumn="correctAnswer" DataSetColumn="correctAnswer" />
              <Mapping SourceColumn="questionId" DataSetColumn="questionId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="QUESTIONSTableAdapter" GeneratorDataComponentClassName="QUESTIONSTableAdapter" Name="QUESTIONS" UserDataComponentName="QUESTIONSTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="QUIZConnectionString (Settings)" DbObjectName="dbo.QUESTIONS" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[QUESTIONS] WHERE (([questionId] = @Original_questionId) AND ([questionContent] = @Original_questionContent))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_questionId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="questionId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_questionContent" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="questionContent" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[QUESTIONS] ([questionId], [questionContent]) VALUES (@questionId, @questionContent);
SELECT questionId, questionContent FROM QUESTIONS WHERE (questionId = @questionId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@questionId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="questionId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@questionContent" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="questionContent" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT questionId, questionContent FROM dbo.QUESTIONS</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[QUESTIONS] SET [questionId] = @questionId, [questionContent] = @questionContent WHERE (([questionId] = @Original_questionId) AND ([questionContent] = @Original_questionContent));
SELECT questionId, questionContent FROM QUESTIONS WHERE (questionId = @questionId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@questionId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="questionId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@questionContent" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="questionContent" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_questionId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="questionId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_questionContent" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="questionContent" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="questionId" DataSetColumn="questionId" />
              <Mapping SourceColumn="questionContent" DataSetColumn="questionContent" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ROLESTableAdapter" GeneratorDataComponentClassName="ROLESTableAdapter" Name="ROLES" UserDataComponentName="ROLESTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="QUIZConnectionString (Settings)" DbObjectName="dbo.ROLES" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ROLES] WHERE (([roleId] = @Original_roleId) AND ([name] = @Original_name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_roleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="roleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ROLES] ([roleId], [name]) VALUES (@roleId, @name);
SELECT roleId, name FROM ROLES WHERE (roleId = @roleId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@roleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="roleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT roleId, name FROM dbo.ROLES</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ROLES] SET [roleId] = @roleId, [name] = @name WHERE (([roleId] = @Original_roleId) AND ([name] = @Original_name));
SELECT roleId, name FROM ROLES WHERE (roleId = @roleId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@roleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="roleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_roleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="roleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="roleId" DataSetColumn="roleId" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SCORESTableAdapter" GeneratorDataComponentClassName="SCORESTableAdapter" Name="SCORES" UserDataComponentName="SCORESTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="QUIZConnectionString (Settings)" DbObjectName="dbo.SCORES" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[SCORES] WHERE (([scoreId] = @Original_scoreId) AND ([win] = @Original_win) AND ([lost] = @Original_lost))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_scoreId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="scoreId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_win" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="win" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_lost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="lost" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[SCORES] ([scoreId], [win], [lost]) VALUES (@scoreId, @win, @lost);
SELECT scoreId, win, lost FROM SCORES WHERE (scoreId = @scoreId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@scoreId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="scoreId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@win" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="win" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@lost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="lost" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT scoreId, win, lost FROM dbo.SCORES</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[SCORES] SET [scoreId] = @scoreId, [win] = @win, [lost] = @lost WHERE (([scoreId] = @Original_scoreId) AND ([win] = @Original_win) AND ([lost] = @Original_lost));
SELECT scoreId, win, lost FROM SCORES WHERE (scoreId = @scoreId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@scoreId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="scoreId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@win" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="win" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@lost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="lost" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_scoreId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="scoreId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_win" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="win" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_lost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="lost" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="scoreId" DataSetColumn="scoreId" />
              <Mapping SourceColumn="win" DataSetColumn="win" />
              <Mapping SourceColumn="lost" DataSetColumn="lost" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="USERSTableAdapter" GeneratorDataComponentClassName="USERSTableAdapter" Name="USERS" UserDataComponentName="USERSTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="QUIZConnectionString (Settings)" DbObjectName="dbo.USERS" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[USERS] WHERE (([userId] = @Original_userId) AND ([login] = @Original_login) AND ([password] = @Original_password) AND ([roleId] = @Original_roleId) AND ([scoreId] = @Original_scoreId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_userId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_login" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="login" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_roleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="roleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_scoreId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="scoreId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[USERS] ([userId], [login], [password], [roleId], [scoreId]) VALUES (@userId, @login, @password, @roleId, @scoreId);
SELECT userId, login, password, roleId, scoreId FROM USERS WHERE (userId = @userId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@userId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@login" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@roleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="roleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@scoreId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="scoreId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT userId, login, password, roleId, scoreId FROM dbo.USERS</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[USERS] SET [userId] = @userId, [login] = @login, [password] = @password, [roleId] = @roleId, [scoreId] = @scoreId WHERE (([userId] = @Original_userId) AND ([login] = @Original_login) AND ([password] = @Original_password) AND ([roleId] = @Original_roleId) AND ([scoreId] = @Original_scoreId));
SELECT userId, login, password, roleId, scoreId FROM USERS WHERE (userId = @userId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@userId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@login" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@roleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="roleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@scoreId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="scoreId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_userId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_login" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="login" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_roleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="roleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_scoreId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="scoreId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="userId" DataSetColumn="userId" />
              <Mapping SourceColumn="login" DataSetColumn="login" />
              <Mapping SourceColumn="password" DataSetColumn="password" />
              <Mapping SourceColumn="roleId" DataSetColumn="roleId" />
              <Mapping SourceColumn="scoreId" DataSetColumn="scoreId" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="QUIZDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="QUIZDataSet" msprop:Generator_UserDSName="QUIZDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="ANSWERS" msprop:Generator_TableClassName="ANSWERSDataTable" msprop:Generator_TableVarName="tableANSWERS" msprop:Generator_TablePropName="ANSWERS" msprop:Generator_RowDeletingName="ANSWERSRowDeleting" msprop:Generator_RowChangingName="ANSWERSRowChanging" msprop:Generator_RowEvHandlerName="ANSWERSRowChangeEventHandler" msprop:Generator_RowDeletedName="ANSWERSRowDeleted" msprop:Generator_UserTableName="ANSWERS" msprop:Generator_RowChangedName="ANSWERSRowChanged" msprop:Generator_RowEvArgName="ANSWERSRowChangeEvent" msprop:Generator_RowClassName="ANSWERSRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="answerId" msprop:Generator_ColumnVarNameInTable="columnanswerId" msprop:Generator_ColumnPropNameInRow="answerId" msprop:Generator_ColumnPropNameInTable="answerIdColumn" msprop:Generator_UserColumnName="answerId" type="xs:int" />
              <xs:element name="answerContent" msprop:Generator_ColumnVarNameInTable="columnanswerContent" msprop:Generator_ColumnPropNameInRow="answerContent" msprop:Generator_ColumnPropNameInTable="answerContentColumn" msprop:Generator_UserColumnName="answerContent">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="correctAnswer" msprop:Generator_ColumnVarNameInTable="columncorrectAnswer" msprop:Generator_ColumnPropNameInRow="correctAnswer" msprop:Generator_ColumnPropNameInTable="correctAnswerColumn" msprop:Generator_UserColumnName="correctAnswer" type="xs:boolean" />
              <xs:element name="questionId" msprop:Generator_ColumnVarNameInTable="columnquestionId" msprop:Generator_ColumnPropNameInRow="questionId" msprop:Generator_ColumnPropNameInTable="questionIdColumn" msprop:Generator_UserColumnName="questionId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="QUESTIONS" msprop:Generator_TableClassName="QUESTIONSDataTable" msprop:Generator_TableVarName="tableQUESTIONS" msprop:Generator_TablePropName="QUESTIONS" msprop:Generator_RowDeletingName="QUESTIONSRowDeleting" msprop:Generator_RowChangingName="QUESTIONSRowChanging" msprop:Generator_RowEvHandlerName="QUESTIONSRowChangeEventHandler" msprop:Generator_RowDeletedName="QUESTIONSRowDeleted" msprop:Generator_UserTableName="QUESTIONS" msprop:Generator_RowChangedName="QUESTIONSRowChanged" msprop:Generator_RowEvArgName="QUESTIONSRowChangeEvent" msprop:Generator_RowClassName="QUESTIONSRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="questionId" msprop:Generator_ColumnVarNameInTable="columnquestionId" msprop:Generator_ColumnPropNameInRow="questionId" msprop:Generator_ColumnPropNameInTable="questionIdColumn" msprop:Generator_UserColumnName="questionId" type="xs:int" />
              <xs:element name="questionContent" msprop:Generator_ColumnVarNameInTable="columnquestionContent" msprop:Generator_ColumnPropNameInRow="questionContent" msprop:Generator_ColumnPropNameInTable="questionContentColumn" msprop:Generator_UserColumnName="questionContent">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ROLES" msprop:Generator_TableClassName="ROLESDataTable" msprop:Generator_TableVarName="tableROLES" msprop:Generator_TablePropName="ROLES" msprop:Generator_RowDeletingName="ROLESRowDeleting" msprop:Generator_RowChangingName="ROLESRowChanging" msprop:Generator_RowEvHandlerName="ROLESRowChangeEventHandler" msprop:Generator_RowDeletedName="ROLESRowDeleted" msprop:Generator_UserTableName="ROLES" msprop:Generator_RowChangedName="ROLESRowChanged" msprop:Generator_RowEvArgName="ROLESRowChangeEvent" msprop:Generator_RowClassName="ROLESRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="roleId" msprop:Generator_ColumnVarNameInTable="columnroleId" msprop:Generator_ColumnPropNameInRow="roleId" msprop:Generator_ColumnPropNameInTable="roleIdColumn" msprop:Generator_UserColumnName="roleId" type="xs:int" />
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SCORES" msprop:Generator_TableClassName="SCORESDataTable" msprop:Generator_TableVarName="tableSCORES" msprop:Generator_TablePropName="SCORES" msprop:Generator_RowDeletingName="SCORESRowDeleting" msprop:Generator_RowChangingName="SCORESRowChanging" msprop:Generator_RowEvHandlerName="SCORESRowChangeEventHandler" msprop:Generator_RowDeletedName="SCORESRowDeleted" msprop:Generator_UserTableName="SCORES" msprop:Generator_RowChangedName="SCORESRowChanged" msprop:Generator_RowEvArgName="SCORESRowChangeEvent" msprop:Generator_RowClassName="SCORESRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="scoreId" msprop:Generator_ColumnVarNameInTable="columnscoreId" msprop:Generator_ColumnPropNameInRow="scoreId" msprop:Generator_ColumnPropNameInTable="scoreIdColumn" msprop:Generator_UserColumnName="scoreId" type="xs:int" />
              <xs:element name="win" msprop:Generator_ColumnVarNameInTable="columnwin" msprop:Generator_ColumnPropNameInRow="win" msprop:Generator_ColumnPropNameInTable="winColumn" msprop:Generator_UserColumnName="win" type="xs:int" />
              <xs:element name="lost" msprop:Generator_ColumnVarNameInTable="columnlost" msprop:Generator_ColumnPropNameInRow="lost" msprop:Generator_ColumnPropNameInTable="lostColumn" msprop:Generator_UserColumnName="lost" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="USERS" msprop:Generator_TableClassName="USERSDataTable" msprop:Generator_TableVarName="tableUSERS" msprop:Generator_TablePropName="USERS" msprop:Generator_RowDeletingName="USERSRowDeleting" msprop:Generator_RowChangingName="USERSRowChanging" msprop:Generator_RowEvHandlerName="USERSRowChangeEventHandler" msprop:Generator_RowDeletedName="USERSRowDeleted" msprop:Generator_UserTableName="USERS" msprop:Generator_RowChangedName="USERSRowChanged" msprop:Generator_RowEvArgName="USERSRowChangeEvent" msprop:Generator_RowClassName="USERSRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="userId" msprop:Generator_ColumnVarNameInTable="columnuserId" msprop:Generator_ColumnPropNameInRow="userId" msprop:Generator_ColumnPropNameInTable="userIdColumn" msprop:Generator_UserColumnName="userId" type="xs:int" />
              <xs:element name="login" msprop:Generator_ColumnVarNameInTable="columnlogin" msprop:Generator_ColumnPropNameInRow="login" msprop:Generator_ColumnPropNameInTable="loginColumn" msprop:Generator_UserColumnName="login">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="password" msprop:Generator_ColumnVarNameInTable="columnpassword" msprop:Generator_ColumnPropNameInRow="password" msprop:Generator_ColumnPropNameInTable="passwordColumn" msprop:Generator_UserColumnName="password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="roleId" msprop:Generator_ColumnVarNameInTable="columnroleId" msprop:Generator_ColumnPropNameInRow="roleId" msprop:Generator_ColumnPropNameInTable="roleIdColumn" msprop:Generator_UserColumnName="roleId" type="xs:int" />
              <xs:element name="scoreId" msprop:Generator_ColumnVarNameInTable="columnscoreId" msprop:Generator_ColumnPropNameInRow="scoreId" msprop:Generator_ColumnPropNameInTable="scoreIdColumn" msprop:Generator_UserColumnName="scoreId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ANSWERS" />
      <xs:field xpath="mstns:answerId" />
    </xs:unique>
    <xs:unique name="QUESTIONS_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:QUESTIONS" />
      <xs:field xpath="mstns:questionId" />
    </xs:unique>
    <xs:unique name="ROLES_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ROLES" />
      <xs:field xpath="mstns:roleId" />
    </xs:unique>
    <xs:unique name="SCORES_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SCORES" />
      <xs:field xpath="mstns:scoreId" />
    </xs:unique>
    <xs:unique name="USERS_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:USERS" />
      <xs:field xpath="mstns:userId" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="ANSWERS_fk0" msdata:parent="QUESTIONS" msdata:child="ANSWERS" msdata:parentkey="questionId" msdata:childkey="questionId" msprop:Generator_UserChildTable="ANSWERS" msprop:Generator_ChildPropName="GetANSWERSRows" msprop:Generator_UserRelationName="ANSWERS_fk0" msprop:Generator_RelationVarName="relationANSWERS_fk0" msprop:Generator_UserParentTable="QUESTIONS" msprop:Generator_ParentPropName="QUESTIONSRow" />
      <msdata:Relationship name="USERS_fk0" msdata:parent="ROLES" msdata:child="USERS" msdata:parentkey="roleId" msdata:childkey="roleId" msprop:Generator_UserChildTable="USERS" msprop:Generator_ChildPropName="GetUSERSRows" msprop:Generator_UserRelationName="USERS_fk0" msprop:Generator_ParentPropName="ROLESRow" msprop:Generator_RelationVarName="relationUSERS_fk0" msprop:Generator_UserParentTable="ROLES" />
      <msdata:Relationship name="USERS_fk1" msdata:parent="SCORES" msdata:child="USERS" msdata:parentkey="scoreId" msdata:childkey="scoreId" msprop:Generator_UserChildTable="USERS" msprop:Generator_ChildPropName="GetUSERSRows" msprop:Generator_UserRelationName="USERS_fk1" msprop:Generator_ParentPropName="SCORESRow" msprop:Generator_RelationVarName="relationUSERS_fk1" msprop:Generator_UserParentTable="SCORES" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>